{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Korisnik\\\\Documents\\\\Ivan\\\\Programiranje\\\\react_udemy\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport \"./Expenses.css\";\nimport ExpenseItem from \"../Expenses/ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  let filteredInfoText = \"2019, 2021 & 2022\";\n  if (filteredYear === 2019) {\n    filteredInfoText = \"2020, 2021 & 2022\";\n  } else if (filteredYear === 2020) {\n    filteredInfoText = \"2019, 2021 & 2022\";\n  } else if (filteredYear === 2021) {\n    filteredInfoText = \"2019, 2020 & 2022\";\n  } else {\n    filteredInfoText = \"2019, 2020 & 2021\";\n  }\n  const filteredChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n  console.log(filteredInfoText);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filteredChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Data for years \", filteredInfoText, \" is hidden\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: props.items[0].title,\n        amount: props.items[0].amount,\n        date: props.items[0].date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: props.items[1].title,\n        amount: props.items[1].amount,\n        date: props.items[1].date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: props.items[2].title,\n        amount: props.items[2].amount,\n        date: props.items[2].date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: props.items[3].title,\n        amount: props.items[3].amount,\n        date: props.items[3].date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Expenses, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["ExpenseItem","Card","ExpensesFilter","useState","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setFilteredYear","filteredInfoText","filteredChangeHandler","selectedYear","console","log","children","className","selected","onChangeFilter","fileName","_jsxFileName","lineNumber","columnNumber","title","items","amount","date","_c","$RefreshReg$"],"sources":["C:/Users/Korisnik/Documents/Ivan/Programiranje/react_udemy/01-starting-setup/src/components/Expenses/Expenses.js"],"sourcesContent":["import \"./Expenses.css\";\r\nimport ExpenseItem from \"../Expenses/ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport { useState } from \"react\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  let filteredInfoText = \"2019, 2021 & 2022\";\r\n\r\n  if (filteredYear === 2019) {\r\n    filteredInfoText = \"2020, 2021 & 2022\";\r\n  } else if (filteredYear === 2020) {\r\n    filteredInfoText = \"2019, 2021 & 2022\";\r\n  } else if (filteredYear === 2021) {\r\n    filteredInfoText = \"2019, 2020 & 2022\";\r\n  } else {\r\n    filteredInfoText = \"2019, 2020 & 2021\";\r\n  }\r\n\r\n  const filteredChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  console.log(filteredInfoText);\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filteredChangeHandler}\r\n        />\r\n        <p>Data for years {filteredInfoText} is hidden</p>\r\n        <ExpenseItem\r\n          title={props.items[0].title}\r\n          amount={props.items[0].amount}\r\n          date={props.items[0].date}\r\n        ></ExpenseItem>\r\n        <ExpenseItem\r\n          title={props.items[1].title}\r\n          amount={props.items[1].amount}\r\n          date={props.items[1].date}\r\n        ></ExpenseItem>\r\n        <ExpenseItem\r\n          title={props.items[2].title}\r\n          amount={props.items[2].amount}\r\n          date={props.items[2].date}\r\n        ></ExpenseItem>\r\n        <ExpenseItem\r\n          title={props.items[3].title}\r\n          amount={props.items[3].amount}\r\n          date={props.items[3].date}\r\n        ></ExpenseItem>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}